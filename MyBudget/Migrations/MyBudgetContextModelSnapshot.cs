// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBudget.Data;

#nullable disable

namespace MyBudget.Migrations
{
    [DbContext(typeof(MyBudgetContext))]
    partial class MyBudgetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("MyBudget.Models.AccountBalance", b =>
                {
                    b.Property<int>("AccountBalanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountBalanceID");

                    b.ToTable("AccountBalances");
                });

            modelBuilder.Entity("MyBudget.Models.BalanceHistory", b =>
                {
                    b.Property<int>("BalanceHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountBalanceID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BalanceHistoryID");

                    b.HasIndex("AccountBalanceID");

                    b.ToTable("BalanceHistories");
                });

            modelBuilder.Entity("MyBudget.Models.ExpenseHistory", b =>
                {
                    b.Property<int>("ExpenseHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountBalanceID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ExpenseHistoryID");

                    b.HasIndex("AccountBalanceID");

                    b.ToTable("ExpenseHistories");
                });

            modelBuilder.Entity("MyBudget.Models.IncomeCategory", b =>
                {
                    b.Property<int>("IncomeCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IncomeCategoryID");

                    b.ToTable("IncomeCategories");
                });

            modelBuilder.Entity("MyBudget.Models.IncomeHistory", b =>
                {
                    b.Property<int>("IncomeHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountBalanceID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IncomeCategoryID")
                        .HasColumnType("INTEGER");

                    b.HasKey("IncomeHistoryID");

                    b.HasIndex("AccountBalanceID");

                    b.HasIndex("IncomeCategoryID");

                    b.ToTable("IncomeHistories");
                });

            modelBuilder.Entity("MyBudget.Models.Rate", b =>
                {
                    b.Property<int>("RateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RateValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("SavingsTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RateID");

                    b.HasIndex("SavingsTypeID");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("MyBudget.Models.SavingsHistory", b =>
                {
                    b.Property<int>("SavingsHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountBalanceID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SavingsTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("SavingsHistoryID");

                    b.HasIndex("AccountBalanceID");

                    b.HasIndex("SavingsTypeID");

                    b.ToTable("SavingsHistories");
                });

            modelBuilder.Entity("MyBudget.Models.SavingsType", b =>
                {
                    b.Property<int>("SavingsTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SavingsTypeID");

                    b.ToTable("SavingsTypes");
                });

            modelBuilder.Entity("MyBudget.Models.BalanceHistory", b =>
                {
                    b.HasOne("MyBudget.Models.AccountBalance", "AccountBalance")
                        .WithMany("BalanceHistories")
                        .HasForeignKey("AccountBalanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountBalance");
                });

            modelBuilder.Entity("MyBudget.Models.ExpenseHistory", b =>
                {
                    b.HasOne("MyBudget.Models.AccountBalance", "AccountBalance")
                        .WithMany("ExpenseHistories")
                        .HasForeignKey("AccountBalanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountBalance");
                });

            modelBuilder.Entity("MyBudget.Models.IncomeHistory", b =>
                {
                    b.HasOne("MyBudget.Models.AccountBalance", "AccountBalance")
                        .WithMany("IncomeHistories")
                        .HasForeignKey("AccountBalanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyBudget.Models.IncomeCategory", "IncomeCategory")
                        .WithMany()
                        .HasForeignKey("IncomeCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountBalance");

                    b.Navigation("IncomeCategory");
                });

            modelBuilder.Entity("MyBudget.Models.Rate", b =>
                {
                    b.HasOne("MyBudget.Models.SavingsType", "SavingsType")
                        .WithMany()
                        .HasForeignKey("SavingsTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavingsType");
                });

            modelBuilder.Entity("MyBudget.Models.SavingsHistory", b =>
                {
                    b.HasOne("MyBudget.Models.AccountBalance", "AccountBalance")
                        .WithMany("SavingsHistories")
                        .HasForeignKey("AccountBalanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyBudget.Models.SavingsType", "SavingsType")
                        .WithMany()
                        .HasForeignKey("SavingsTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountBalance");

                    b.Navigation("SavingsType");
                });

            modelBuilder.Entity("MyBudget.Models.AccountBalance", b =>
                {
                    b.Navigation("BalanceHistories");

                    b.Navigation("ExpenseHistories");

                    b.Navigation("IncomeHistories");

                    b.Navigation("SavingsHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
